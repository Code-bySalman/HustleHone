generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resume {
  id             String           @id @default(cuid())
  userId         String

  title          String?
  description    String?

  photoUrl      String?
  colorHex       String           @default("#000000")
  borderStyle    String           @default("squicircle")
  summary        String?
  firstName      String?
  lastName       String?
  email          String?
  phone          String?
  jobTitle       String?
  city           String?
  country        String?
  linkedin        String?
  github         String?

  workExperiences WorkExperience[]
  educations       Education[]
  projects         Project[]
  skills  String[]

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt

  @@map("resumes")
}

model WorkExperience {
  id          String   @id @default(cuid())
  position    String?
  company     String?
  startDate   DateTime?
  endDate     DateTime?
  description String?

  resumeId    String
  resume      Resume   @relation(fields: [resumeId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("work_experience")
}

model Education {
  id          String   @id @default(cuid())

  degree      String?
  college     String?
  school      String?

  startDate   DateTime?
  endDate     DateTime?

  resumeId    String
  resume      Resume   @relation(fields: [resumeId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("education")
}

model Project {
  id          String   @id @default(cuid())
  title       String?
  description String?
  startDate   DateTime?
  endDate     DateTime?
  projectUrl  String?

  resumeId    String
  resume      Resume   @relation(fields: [resumeId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}

model UserSubscription {
  id          String   @id @default(cuid())
  userId      String @unique
  stripeCustomerId    String @unique
  stripeSubscriptionId String @unique
  stripePriceId String 
 stripeCancelAtPeriodEnd Boolean @default(false)
  stripeCurrentPeriodEnd DateTime

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("user_subscriptions")
}